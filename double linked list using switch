#include <iostream>

using namespace std;

// Node structure for doubly linked list
struct Node {
    int data;
    Node* prev;
    Node* next;
};

// Class for Doubly Linked List
class DoublyLinkedList {
private:
    Node* head;
public:
    DoublyLinkedList() {
        head = nullptr;
    }

    // Function to insert node at the beginning of the list
    void insertBegin(int value) {
        Node* newNode = new Node;
        newNode->data = value;
        newNode->prev = nullptr;
        newNode->next = head;

        if (head != nullptr) {
            head->prev = newNode;
        }

        head = newNode;
        cout << "Node inserted at the beginning successfully." << endl;
    }

    // Function to display the elements of the list
    void displayList() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }

    // Function to delete a node from the list
    void deleteNode(int value) {
        Node* temp = head;

        while (temp != nullptr && temp->data != value) {
            temp = temp->next;
        }

        if (temp == nullptr) {
            cout << "Node with value " << value << " not found in the list." << endl;
            return;
        }

        if (temp->prev != nullptr) {
            temp->prev->next = temp->next;
        } else {
            head = temp->next;
        }

        if (temp->next != nullptr) {
            temp->next->prev = temp->prev;
        }

        delete temp;
        cout << "Node with value " << value << " deleted successfully." << endl;
    }
};

int main() {
    DoublyLinkedList dll;
    int choice, value;

    do {
        cout << "1. Insert Node at the Beginning" << endl;
        cout << "2. Display List" << endl;
        cout << "3. Delete Node" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch(choice) {
            case 1:
                cout << "Enter value to be inserted: ";
                cin >> value;
                dll.insertBegin(value);
                break;
            case 2:
                cout << "List: ";
                dll.displayList();
                break;
            case 3:
                cout << "Enter value of node to delete: ";
                cin >> value;
                dll.deleteNode(value);
                break;
            case 4:
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while(choice != 4);

    return 0;
}
